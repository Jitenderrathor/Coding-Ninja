{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding-Ninja\\\\React\\\\gallery-app\\\\src\\\\postContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from \"react\";\n// create post context here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst postContext = /*#__PURE__*/createContext();\n// Create custom hook that returns context value here\nexport const usePostContext = () => {\n  _s();\n  const context = useContext(postContext);\n  if (!context) {\n    throw new Error(\"usePostContext must be used within a PostProvider\");\n  }\n  return context;\n};\n// create a custom saved post provider here with add and reset functions\n_s(usePostContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction PostProvider(_ref) {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [savedPosts, setSavedPosts] = useState([]);\n  const addPost = post => {\n    setSavedPosts(prevPosts => [...prevPosts, post]);\n  };\n  return /*#__PURE__*/_jsxDEV(postContext.Provider, {\n    value: {\n      addPost\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s2(PostProvider, \"0AKRioMz2WChHMzSlAl20cYD2Ds=\");\n_c = PostProvider;\nvar _c;\n$RefreshReg$(_c, \"PostProvider\");","map":{"version":3,"names":["createContext","useState","useContext","jsxDEV","_jsxDEV","postContext","usePostContext","_s","context","Error","PostProvider","_ref","_s2","children","savedPosts","setSavedPosts","addPost","post","prevPosts","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Coding-Ninja/React/gallery-app/src/postContext.js"],"sourcesContent":["import { createContext, useState, useContext } from \"react\";\r\n// create post context here\r\nconst postContext = createContext();\r\n// Create custom hook that returns context value here\r\nexport const usePostContext = () => {\r\n  const context = useContext(postContext);\r\n  if (!context) {\r\n    throw new Error(\"usePostContext must be used within a PostProvider\");\r\n  }\r\n  return context;\r\n};\r\n// create a custom saved post provider here with add and reset functions\r\nfunction PostProvider({ children }) {\r\n  const [savedPosts, setSavedPosts] = useState([]);\r\n  const addPost = (post) => {\r\n    setSavedPosts((prevPosts) => [...prevPosts, post]);\r\n  };\r\n  return (\r\n    <postContext.Provider value={{ addPost }}>{children}</postContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AACnC;AACA,OAAO,MAAMM,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,OAAO,GAAGN,UAAU,CAACG,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOD,OAAO;AAChB,CAAC;AACD;AAAAD,EAAA,CAPaD,cAAc;AAQ3B,SAASI,YAAYA,CAAAC,IAAA,EAAe;EAAAC,GAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMe,OAAO,GAAIC,IAAI,IAAK;IACxBF,aAAa,CAAEG,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,IAAI,CAAC,CAAC;EACpD,CAAC;EACD,oBACEb,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEJ;IAAQ,CAAE;IAAAH,QAAA,EAAEA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAE/E;AAACZ,GAAA,CARQF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}